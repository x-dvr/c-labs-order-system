version: "3"

networks:
  mongo-network:
    driver: bridge

services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9093:9093'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=LOCAL://kafka:9093,REMOTE://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LOCAL:PLAINTEXT,REMOTE:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=LOCAL://localhost:9093,REMOTE://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_INTER_BROKER_LISTENER_NAME=REMOTE
    depends_on:
      - zookeeper
  mongodb:
    image: 'mongo:latest'
    ports:
      - "27017:27017"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
  
  # mongo1:
  #   image: mongo:5
  #   container_name: mongo1
  #   command: ["--replSet", "lrs", "--bind_ip_all", "--port", "27017"]
  #   # volumes:
  #   #   - ./data/mongo-1:/data/db
  #   ports:
  #     - 27017:27017
  #   healthcheck:
  #     test: test $$(echo "rs.initiate({_id:'lrs',members:[{_id:0,host:\"mongo1:27017\"},{_id:1,host:\"mongo2:27018\"},{_id:2,host:\"mongo3:27019\"}]}).ok || rs.status().ok" | mongo --port 27017 --quiet) -eq 1
  #     interval: 10s
  #     start_period: 30s

  # mongo2:
  #   image: mongo:5
  #   container_name: mongo2
  #   command: ["--replSet", "lrs", "--bind_ip_all", "--port", "27018"]
  #   # volumes:
  #   #   - ./data/mongo-2:/data/db
  #   ports:
  #     - 27018:27018

  # mongo3:
  #   image: mongo:5
  #   container_name: mongo3
  #   command: ["--replSet", "lrs", "--bind_ip_all", "--port", "27019"]
  #   # volumes:
  #   #   - ./data/mongo-3:/data/db
  #   ports:
  #     - 27019:27019

  contact-service:
    build: contact-service/
    command: 
     - "--kafka.bootstrapServer=kafka:9092" 
     - "--spring.data.mongodb.host=mongodb" 
     - "--spring.data.mongodb.port=27017"
     - "--api.maxArtificialLatency=0"
     - "--dataload.numberOfPersons=10"
     - "--spring.profiles.active=kafka"
    ports:
      - 8080:8080
    depends_on:
      # kafka:
      #   condition: service_started
      # mongo1:
      #   condition: service_healthy
      - zookeeper
      - kafka
      - mongodb
  order-service:
    build: order-service/
    ports:
      - 3000:3000
    environment:
      - KAFKA_BROKER=kafka:9092
      - MONGO_URI=mongodb://mongodb:27017
      - NODE_PORT=3000
      - CONTRACT_API=contact-service:8080
    depends_on:
      - zookeeper
      - kafka
      - mongodb

